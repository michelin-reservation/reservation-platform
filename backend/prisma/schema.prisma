// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id            String        @id @default(uuid())
  name          String
  nameKorean    String
  category      String
  tags          String[]
  address       String
  lat           Float
  lng           Float
  image         String
  michelinGuide String?
  description   String?       @db.Text
  phone         String?
  services      String[]
  social        Json?
  openingHours  Json?
  menuItems     MenuItem[]
  reviews       Review[]
  reservations  Reservation[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model MenuItem {
  id           String     @id @default(uuid())
  name         String
  nameKorean   String?
  price        String
  description  String?    @db.Text
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Review {
  id           String     @id @default(uuid())
  rating       Int
  content      String     @db.Text
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Reservation {
  id           String     @id @default(uuid())
  date         DateTime
  time         String
  people       Int
  status       String     @default("pending")
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  name         String?
  password     String
  reviews      Review[]
  reservations Reservation[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
} 