1. 모니터링 스택이 성공적으로 배포되었습니다!

2. 접근 방법:
   {{- if .Values.ingress.enabled }}
   - Grafana: http{{ if .Values.ingress.tls }}s{{ end }}://{{ (index .Values.ingress.hosts 0).host }}{{ (index (index .Values.ingress.hosts 0).paths 0).path }}
   {{- else }}
   - Grafana: kubectl port-forward svc/{{ include "monitoring.fullname" . }}-grafana 3000:3000
   {{- end }}
   - Prometheus: kubectl port-forward svc/{{ include "monitoring.fullname" . }}-prometheus 9090:9090
   - Loki: kubectl port-forward svc/{{ include "monitoring.fullname" . }}-loki 3100:3100

3. Grafana 로그인 정보:
   - 사용자명: {{ .Values.grafana.adminUser }}
   - 비밀번호: {{ .Values.grafana.adminPassword }}

4. 데이터소스:
   - Prometheus: http://{{ include "monitoring.fullname" . }}-prometheus:{{ .Values.prometheus.service.port }}
   {{- if .Values.loki.enabled }}
   - Loki: http://{{ include "monitoring.fullname" . }}-loki:{{ .Values.loki.service.port }}
   {{- end }}

5. 모니터링 대상:
   - Michelin Backend: backend:8000/metrics
   - Michelin Frontend: frontend:3000/metrics
   - MySQL: db:3306
   - Redis: redis:6379
   - Kubernetes Pods (자동 발견)

6. 로그 수집:
   {{- if .Values.promtail.enabled }}
   - Promtail이 모든 노드에서 실행 중
   - Kubernetes Pod 로그가 자동으로 Loki로 전송됨
   {{- end }}

7. 알림 규칙:
   - CPU 사용률 > 80% (5분)
   - 메모리 사용률 > 80% (5분)
   - 에러율 > 5% (2분)

8. 유용한 명령어:
   - Pod 상태 확인: kubectl get pods -l app.kubernetes.io/name={{ .Chart.Name }}
   - 로그 확인: kubectl logs -l app.kubernetes.io/name={{ .Chart.Name }}
   - 서비스 확인: kubectl get svc -l app.kubernetes.io/name={{ .Chart.Name }}