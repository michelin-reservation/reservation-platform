# Default values for monitoring.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# Prometheus 설정
prometheus:
  enabled: true
  image:
    repository: prom/prometheus
    tag: "v2.45.0"
    pullPolicy: IfNotPresent

  config:
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "rules/*.yml"

    scrape_configs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      - job_name: 'michelin-backend'
        static_configs:
          - targets: ['backend:8000']
        metrics_path: '/metrics'
        scrape_interval: 15s

      - job_name: 'michelin-frontend'
        static_configs:
          - targets: ['frontend:3000']
        metrics_path: '/metrics'
        scrape_interval: 15s

      - job_name: 'mysql'
        static_configs:
          - targets: ['db:3306']
        scrape_interval: 30s

      - job_name: 'redis'
        static_configs:
          - targets: ['redis:6379']
        scrape_interval: 30s

  service:
    type: ClusterIP
    port: 9090

  persistence:
    enabled: true
    size: 10Gi
    storageClass: ""

  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 512Mi

# Grafana 설정
grafana:
  enabled: true
  image:
    repository: grafana/grafana
    tag: "10.0.0"
    pullPolicy: IfNotPresent

  adminUser: admin
  adminPassword: "shitshti123@"

  service:
    type: ClusterIP
    port: 3000

  persistence:
    enabled: true
    size: 5Gi
    storageClass: ""

  resources:
    limits:
      cpu: 300m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # 데이터소스 자동 설정
  datasources:
    prometheus:
      url: "http://prometheus:9090"
      access: proxy
      isDefault: true
    loki:
      url: "http://loki:3100"
      access: proxy

  alerting:
    slackWebhookUrl: "https://hooks.slack.com/services/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"
    slackChannel: "#michelin-reservation-platform-2025-q2"

# Loki 설정
loki:
  enabled: true
  image:
    repository: grafana/loki
    tag: "2.9.0"
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 3100

  persistence:
    enabled: true
    size: 10Gi
    storageClass: ""

  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 512Mi

# Promtail 설정 (로그 수집)
promtail:
  enabled: true
  image:
    repository: grafana/promtail
    tag: "2.9.0"
    pullPolicy: IfNotPresent

  config:
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    positions:
      filename: /tmp/positions.yaml

    clients:
      - url: http://loki:3100/loki/api/v1/push

    scrape_configs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        pipeline_stages:
          - docker: {}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
            action: drop
            regex: .+
          - source_labels:
              - __meta_kubernetes_pod_label_app
            action: replace
            target_label: app
          - source_labels:
              - __meta_kubernetes_pod_label_component
            action: replace
            target_label: component
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod
          - source_labels:
              - __meta_kubernetes_pod_container_name
            action: replace
            target_label: container
          - source_labels:
              - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
            action: drop
            regex: .+
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape
            action: keep
            regex: true
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels:
              - __address__, __meta_kubernetes_pod_annotation_prometheus_io_port
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: kubernetes_pod_name

  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Alertmanager 설정 (선택사항)
alertmanager:
  enabled: false
  image:
    repository: prom/alertmanager
    tag: "v0.25.0"
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 9093

  persistence:
    enabled: true
    size: 1Gi
    storageClass: ""

  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

  config:
    global:
      slack_api_url: 'https://hooks.slack.com/services/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'

# Ingress 설정
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: monitoring.local
      paths:
        - path: /prometheus
          pathType: Prefix
        - path: /grafana
          pathType: Prefix
        - path: /loki
          pathType: Prefix
  tls: []

# ServiceAccount 설정
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# Pod Security Context
podSecurityContext: {}
securityContext: {}

# Node Selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}
