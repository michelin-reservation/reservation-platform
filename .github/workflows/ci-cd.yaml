name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./docker/Dockerfile.backend
          push: true
          tags: ${{ env.DOCKER_USER }}/michelin-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./docker/Dockerfile.frontend
          push: true
          tags: ${{ env.DOCKER_USER }}/michelin-frontend:latest

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: |
          echo "$KUBECONFIG_DATA" | base64 -d > $HOME/.kube/config

      - name: Helm upgrade backend
        run: |
          helm upgrade --install backend ./helm/backend \
            --set image.repository=${{ env.DOCKER_USER }}/michelin-backend \
            --set image.tag=latest \
            --namespace ${{ github.ref == 'refs/heads/prod' && 'prod' || 'dev' }} --create-namespace

      - name: Helm upgrade frontend
        run: |
          helm upgrade --install frontend ./helm/frontend \
            --set image.repository=${{ env.DOCKER_USER }}/michelin-frontend \
            --set image.tag=latest \
            --namespace ${{ github.ref == 'refs/heads/prod' && 'prod' || 'dev' }} --create-namespace
