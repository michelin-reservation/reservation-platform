name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [backend, frontend]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ${{ matrix.project }}/package-lock.json

    - name: Install dependencies
      run: |
        cd ${{ matrix.project }}
        npm ci

    - name: Run linting
      run: |
        cd ${{ matrix.project }}
        npm run lint

    - name: Run tests
      if: matrix.project == 'backend'
      run: |
        cd ${{ matrix.project }}
        npm test

    - name: Build
      if: matrix.project == 'frontend'
      run: |
        cd ${{ matrix.project }}
        npm run build

    - name: Upload build artifacts
      if: matrix.project == 'frontend'
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/dist

  deploy:
    needs: test-and-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Download frontend build
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: frontend/dist

    - name: Deploy to production
      run: |
        echo "🚀 배포 시작"
        # 여기에 실제 배포 스크립트 추가
        # 예: SSH를 통한 서버 배포, 클라우드 서비스 배포 등 