name: Deploy to NCP

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    branches: [main]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Download frontend build
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: frontend/dist

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push backend
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/michelin-backend:latest
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/michelin-backend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/michelin-backend:buildcache,mode=max

    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/michelin-frontend:latest
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/michelin-frontend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/michelin-frontend:buildcache,mode=max

    - name: Deploy to NCP
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.NCP_HOST }}
        username: ${{ secrets.NCP_USERNAME }}
        key: ${{ secrets.NCP_SSH_KEY }}
        script: |
          # 환경변수 파일 백업
          cp .env .env.backup
          
          # 최신 이미지 가져오기
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/michelin-backend:latest
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/michelin-frontend:latest
          
          # 기존 컨테이너 중지 및 제거
          docker-compose down || true
          
          # 새 컨테이너 시작
          docker-compose up -d
          
          # 헬스 체크
          echo "Waiting for services to be healthy..."
          sleep 30
          
          # 헬스 체크 실패 시 롤백
          if ! curl -f http://localhost:8000/health; then
            echo "Health check failed, rolling back..."
            docker-compose down
            mv .env.backup .env
            docker-compose up -d
            exit 1
          fi
          
          # 성공 시 백업 파일 삭제
          rm .env.backup
          
    - name: Notify deployment status
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      continue-on-error: true 